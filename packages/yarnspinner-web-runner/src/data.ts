import type { MetadataEntry } from "./yarnvm";

// GENERATED DATA FROM munger.py!
const stringTable: { [key: string]: string } = { "line:98edda5d": "Yarn Spinner is a language for writing conversations in games!", "line:0edddd2a": "You can use it to write branching dialogue, and use that in a game engine!", "line:b48cd4b3": "For example, here's a choice between some options!", "line:22bcd3c4": "Wow, some options!", "line:8129b75a": "You got it, pal!", "line:1719b02d": "Can I put text inside options?", "line:ad48b9b4": "You sure can!", "line:3b78bec3": "For example, here's some lines inside an option.", "line:aa650153": "You can even put options inside OTHER options!", "line:3c550624": "Like this!", "line:fb2f4913": "Wow!", "line:6d1f4e64": "Or this!", "line:d74e47fd": "Incredible!", "line:417e408a": "Wow, some options can be made unavailable!", "line:e2eb2414": "You can also write 'commands', which represent things that happen in the game!", "line:74db2363": "In this editor, they'll appear as text:", "line:ce8a2afa": "Nice!", "line:58ba2d8d": "Right??", "line:c9a7921d": "But it didn't actually fade!", "line:5f97956a": "That's because this page doesn't know about 'fading', or any other feature.", "line:387c6438": "When you're testing your script on this page, we'll just show you your commands as text.", "line:ae4c634f": "In a real game, you can define custom commands that do useful work!", "line:141d6ad6": "You can also use variables, which store information!", "line:822d6da1": "Let's set a variable called \"$name\".", "line:21b8093f": "We can use \"$name\" in lines: My name's {0}!", "line:b7880e48": "What can I store in variables?", "line:0dd907d1": "You can store text, numbers, and true/false values!", "line:9be900a6": "Where do variables get stored?", "line:0af4bf36": "In this page, we store them in memory. When you use Yarn Spinner in a game engine, like Unity, you can store them in memory, or write custom code that stores them on disk alongside the rest of your saved game!", "line:9cc4b841": "We can also use 'if' statements to change what happens!", "line:794d7f21": "The '$gold' variable is bigger than 5!", "line:ef7d7856": "The '$gold' variable is 5 or less!", "line:552c71cf": "Finally, we can use the \"jump\" command to go to a different node! Let's do that now!", "line:1d9d020a": "Here we are in a different node! Nodes let you divide up your content into different blocks, which makes it easier to manage.", "line:be086694": "We're all done! Try changing the text in the editor to the left, and clicking Test again!" };
const metadataTable: { [key: string]: MetadataEntry } = { "line:b48cd4b3": { "id": "line:b48cd4b3", "node": "Start", "lineNumber": "6", "tags": ["lastline"] }, "line:aa650153": { "id": "line:aa650153", "node": "Start", "lineNumber": "13", "tags": ["lastline"] }, "line:21b8093f": { "id": "line:21b8093f", "node": "Start", "lineNumber": "42", "tags": ["lastline"] } };
const data = Uint8Array.from([0x12, 0xc1, 0x07, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0xb7, 0x07, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x72, 0x74, 0x32, 0x0e, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x05, 0x53, 0x74, 0x61, 0x72, 0x74, 0x3a, 0x11, 0x1a, 0x0f, 0x0a, 0x0d, 0x6c, 0x69, 0x6e, 0x65, 0x3a, 0x39, 0x38, 0x65, 0x64, 0x64, 0x61, 0x35, 0x64, 0x3a, 0x11, 0x1a, 0x0f, 0x0a, 0x0d, 0x6c, 0x69, 0x6e, 0x65, 0x3a, 0x30, 0x65, 0x64, 0x64, 0x64, 0x64, 0x32, 0x61, 0x3a, 0x11, 0x1a, 0x0f, 0x0a, 0x0d, 0x6c, 0x69, 0x6e, 0x65, 0x3a, 0x62, 0x34, 0x38, 0x63, 0x64, 0x34, 0x62, 0x33, 0x3a, 0x13, 0x2a, 0x11, 0x0a, 0x0d, 0x6c, 0x69, 0x6e, 0x65, 0x3a, 0x32, 0x32, 0x62, 0x63, 0x64, 0x33, 0x63, 0x34, 0x10, 0x09, 0x3a, 0x13, 0x2a, 0x11, 0x0a, 0x0d, 0x6c, 0x69, 0x6e, 0x65, 0x3a, 0x31, 0x37, 0x31, 0x39, 0x62, 0x30, 0x32, 0x64, 0x10, 0x0b, 0x3a, 0x02, 0x4a, 0x00, 0x3a, 0x15, 0x2a, 0x13, 0x0a, 0x0d, 0x6c, 0x69, 0x6e, 0x65, 0x3a, 0x34, 0x31, 0x37, 0x65, 0x34, 0x30, 0x38, 0x61, 0x10, 0x18, 0x20, 0x01, 0x3a, 0x02, 0x32, 0x00, 0x3a, 0x02, 0x12, 0x00, 0x3a, 0x11, 0x1a, 0x0f, 0x0a, 0x0d, 0x6c, 0x69, 0x6e, 0x65, 0x3a, 0x38, 0x31, 0x32, 0x39, 0x62, 0x37, 0x35, 0x61, 0x3a, 0x04, 0x0a, 0x02, 0x08, 0x19, 0x3a, 0x11, 0x1a, 0x0f, 0x0a, 0x0d, 0x6c, 0x69, 0x6e, 0x65, 0x3a, 0x61, 0x64, 0x34, 0x38, 0x62, 0x39, 0x62, 0x34, 0x3a, 0x11, 0x1a, 0x0f, 0x0a, 0x0d, 0x6c, 0x69, 0x6e, 0x65, 0x3a, 0x33, 0x62, 0x37, 0x38, 0x62, 0x65, 0x63, 0x33, 0x3a, 0x11, 0x1a, 0x0f, 0x0a, 0x0d, 0x6c, 0x69, 0x6e, 0x65, 0x3a, 0x61, 0x61, 0x36, 0x35, 0x30, 0x31, 0x35, 0x33, 0x3a, 0x13, 0x2a, 0x11, 0x0a, 0x0d, 0x6c, 0x69, 0x6e, 0x65, 0x3a, 0x33, 0x63, 0x35, 0x35, 0x30, 0x36, 0x32, 0x34, 0x10, 0x12, 0x3a, 0x13, 0x2a, 0x11, 0x0a, 0x0d, 0x6c, 0x69, 0x6e, 0x65, 0x3a, 0x36, 0x64, 0x31, 0x66, 0x34, 0x65, 0x36, 0x34, 0x10, 0x14, 0x3a, 0x02, 0x32, 0x00, 0x3a, 0x02, 0x12, 0x00, 0x3a, 0x11, 0x1a, 0x0f, 0x0a, 0x0d, 0x6c, 0x69, 0x6e, 0x65, 0x3a, 0x66, 0x62, 0x32, 0x66, 0x34, 0x39, 0x31, 0x33, 0x3a, 0x04, 0x0a, 0x02, 0x08, 0x16, 0x3a, 0x11, 0x1a, 0x0f, 0x0a, 0x0d, 0x6c, 0x69, 0x6e, 0x65, 0x3a, 0x64, 0x37, 0x34, 0x65, 0x34, 0x37, 0x66, 0x64, 0x3a, 0x04, 0x0a, 0x02, 0x08, 0x16, 0x3a, 0x02, 0x5a, 0x00, 0x3a, 0x04, 0x0a, 0x02, 0x08, 0x19, 0x3a, 0x04, 0x0a, 0x02, 0x08, 0x19, 0x3a, 0x02, 0x5a, 0x00, 0x3a, 0x11, 0x1a, 0x0f, 0x0a, 0x0d, 0x6c, 0x69, 0x6e, 0x65, 0x3a, 0x65, 0x32, 0x65, 0x62, 0x32, 0x34, 0x31, 0x34, 0x3a, 0x11, 0x1a, 0x0f, 0x0a, 0x0d, 0x6c, 0x69, 0x6e, 0x65, 0x3a, 0x37, 0x34, 0x64, 0x62, 0x32, 0x33, 0x36, 0x33, 0x3a, 0x0f, 0x22, 0x0d, 0x0a, 0x0b, 0x66, 0x61, 0x64, 0x65, 0x5f, 0x75, 0x70, 0x20, 0x31, 0x2e, 0x30, 0x3a, 0x13, 0x2a, 0x11, 0x0a, 0x0d, 0x6c, 0x69, 0x6e, 0x65, 0x3a, 0x63, 0x65, 0x38, 0x61, 0x32, 0x61, 0x66, 0x61, 0x10, 0x21, 0x3a, 0x13, 0x2a, 0x11, 0x0a, 0x0d, 0x6c, 0x69, 0x6e, 0x65, 0x3a, 0x63, 0x39, 0x61, 0x37, 0x39, 0x32, 0x31, 0x64, 0x10, 0x23, 0x3a, 0x02, 0x32, 0x00, 0x3a, 0x02, 0x12, 0x00, 0x3a, 0x11, 0x1a, 0x0f, 0x0a, 0x0d, 0x6c, 0x69, 0x6e, 0x65, 0x3a, 0x35, 0x38, 0x62, 0x61, 0x32, 0x64, 0x38, 0x64, 0x3a, 0x04, 0x0a, 0x02, 0x08, 0x27, 0x3a, 0x11, 0x1a, 0x0f, 0x0a, 0x0d, 0x6c, 0x69, 0x6e, 0x65, 0x3a, 0x35, 0x66, 0x39, 0x37, 0x39, 0x35, 0x36, 0x61, 0x3a, 0x11, 0x1a, 0x0f, 0x0a, 0x0d, 0x6c, 0x69, 0x6e, 0x65, 0x3a, 0x33, 0x38, 0x37, 0x63, 0x36, 0x34, 0x33, 0x38, 0x3a, 0x11, 0x1a, 0x0f, 0x0a, 0x0d, 0x6c, 0x69, 0x6e, 0x65, 0x3a, 0x61, 0x65, 0x34, 0x63, 0x36, 0x33, 0x34, 0x66, 0x3a, 0x04, 0x0a, 0x02, 0x08, 0x27, 0x3a, 0x02, 0x5a, 0x00, 0x3a, 0x11, 0x1a, 0x0f, 0x0a, 0x0d, 0x6c, 0x69, 0x6e, 0x65, 0x3a, 0x31, 0x34, 0x31, 0x64, 0x36, 0x61, 0x64, 0x36, 0x3a, 0x11, 0x1a, 0x0f, 0x0a, 0x0d, 0x6c, 0x69, 0x6e, 0x65, 0x3a, 0x38, 0x32, 0x32, 0x64, 0x36, 0x64, 0x61, 0x31, 0x3a, 0x08, 0x3a, 0x06, 0x0a, 0x04, 0x59, 0x61, 0x72, 0x6e, 0x3a, 0x09, 0x72, 0x07, 0x0a, 0x05, 0x24, 0x6e, 0x61, 0x6d, 0x65, 0x3a, 0x02, 0x5a, 0x00, 0x3a, 0x09, 0x6a, 0x07, 0x0a, 0x05, 0x24, 0x6e, 0x61, 0x6d, 0x65, 0x3a, 0x13, 0x1a, 0x11, 0x0a, 0x0d, 0x6c, 0x69, 0x6e, 0x65, 0x3a, 0x32, 0x31, 0x62, 0x38, 0x30, 0x39, 0x33, 0x66, 0x10, 0x01, 0x3a, 0x13, 0x2a, 0x11, 0x0a, 0x0d, 0x6c, 0x69, 0x6e, 0x65, 0x3a, 0x62, 0x37, 0x38, 0x38, 0x30, 0x65, 0x34, 0x38, 0x10, 0x33, 0x3a, 0x13, 0x2a, 0x11, 0x0a, 0x0d, 0x6c, 0x69, 0x6e, 0x65, 0x3a, 0x39, 0x62, 0x65, 0x39, 0x30, 0x30, 0x61, 0x36, 0x10, 0x35, 0x3a, 0x02, 0x32, 0x00, 0x3a, 0x02, 0x12, 0x00, 0x3a, 0x11, 0x1a, 0x0f, 0x0a, 0x0d, 0x6c, 0x69, 0x6e, 0x65, 0x3a, 0x30, 0x64, 0x64, 0x39, 0x30, 0x37, 0x64, 0x31, 0x3a, 0x04, 0x0a, 0x02, 0x08, 0x37, 0x3a, 0x11, 0x1a, 0x0f, 0x0a, 0x0d, 0x6c, 0x69, 0x6e, 0x65, 0x3a, 0x30, 0x61, 0x66, 0x34, 0x62, 0x66, 0x33, 0x36, 0x3a, 0x04, 0x0a, 0x02, 0x08, 0x37, 0x3a, 0x02, 0x5a, 0x00, 0x3a, 0x11, 0x1a, 0x0f, 0x0a, 0x0d, 0x6c, 0x69, 0x6e, 0x65, 0x3a, 0x39, 0x63, 0x63, 0x34, 0x62, 0x38, 0x34, 0x31, 0x3a, 0x07, 0x42, 0x05, 0x0d, 0x00, 0x00, 0xa0, 0x40, 0x3a, 0x09, 0x72, 0x07, 0x0a, 0x05, 0x24, 0x67, 0x6f, 0x6c, 0x64, 0x3a, 0x02, 0x5a, 0x00, 0x3a, 0x09, 0x6a, 0x07, 0x0a, 0x05, 0x24, 0x67, 0x6f, 0x6c, 0x64, 0x3a, 0x07, 0x42, 0x05, 0x0d, 0x00, 0x00, 0xa0, 0x40, 0x3a, 0x07, 0x42, 0x05, 0x0d, 0x00, 0x00, 0x00, 0x40, 0x3a, 0x16, 0x62, 0x14, 0x0a, 0x12, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x2e, 0x47, 0x72, 0x65, 0x61, 0x74, 0x65, 0x72, 0x54, 0x68, 0x61, 0x6e, 0x3a, 0x04, 0x52, 0x02, 0x08, 0x43, 0x3a, 0x11, 0x1a, 0x0f, 0x0a, 0x0d, 0x6c, 0x69, 0x6e, 0x65, 0x3a, 0x37, 0x39, 0x34, 0x64, 0x37, 0x66, 0x32, 0x31, 0x3a, 0x04, 0x0a, 0x02, 0x08, 0x46, 0x3a, 0x02, 0x5a, 0x00, 0x3a, 0x11, 0x1a, 0x0f, 0x0a, 0x0d, 0x6c, 0x69, 0x6e, 0x65, 0x3a, 0x65, 0x66, 0x37, 0x64, 0x37, 0x38, 0x35, 0x36, 0x3a, 0x04, 0x0a, 0x02, 0x08, 0x46, 0x3a, 0x11, 0x1a, 0x0f, 0x0a, 0x0d, 0x6c, 0x69, 0x6e, 0x65, 0x3a, 0x35, 0x35, 0x32, 0x63, 0x37, 0x31, 0x63, 0x66, 0x3a, 0x0e, 0x82, 0x01, 0x0b, 0x0a, 0x09, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x4e, 0x6f, 0x64, 0x65, 0x3a, 0x03, 0xa2, 0x01, 0x00, 0x12, 0x57, 0x0a, 0x09, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x4a, 0x0a, 0x09, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x4e, 0x6f, 0x64, 0x65, 0x32, 0x12, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x09, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x4e, 0x6f, 0x64, 0x65, 0x3a, 0x11, 0x1a, 0x0f, 0x0a, 0x0d, 0x6c, 0x69, 0x6e, 0x65, 0x3a, 0x31, 0x64, 0x39, 0x64, 0x30, 0x32, 0x30, 0x61, 0x3a, 0x11, 0x1a, 0x0f, 0x0a, 0x0d, 0x6c, 0x69, 0x6e, 0x65, 0x3a, 0x62, 0x65, 0x30, 0x38, 0x36, 0x36, 0x39, 0x34, 0x3a, 0x03, 0xa2, 0x01, 0x00, 0x1a, 0x0b, 0x0a, 0x05, 0x24, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x02, 0x0a, 0x00, 0x1a, 0x0e, 0x0a, 0x05, 0x24, 0x67, 0x6f, 0x6c, 0x64, 0x12, 0x05, 0x1d, 0x00, 0x00, 0x00, 0x00]);

type YarnData = {
    programData: Uint8Array;
    stringTable: Record<string, string>;
    metadataTable: Record<string, MetadataEntry>;
}

// eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-member-access
(window as any).yarnData = {
    programData: data,
    stringTable,
    metadataTable
} satisfies YarnData;
