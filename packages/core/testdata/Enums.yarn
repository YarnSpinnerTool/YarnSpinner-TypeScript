title: Start
---

// Create a new enum, "Food". Variables of this type can store one of these
// three cases:
<<enum Food>>
    <<case Apple>>
    <<case Orange>>
    <<case Pear>>
<<endenum>>

// Declare a new variable, of this type.
<<declare $favouriteFood = Food.Apple as Food>>

// The 'as Food' can be left out, because the compiler will figure it out
<<declare $secondFavouriteFood = Food.Orange>>

// The 'Food' can be left out too, because the compiler will figure it out
<<declare $thirdFavouriteFood = .Pear>>

// Enum variables can be compared to each other
<<if $favouriteFood == Food.Apple>>
    I like apples!
<<elseif $favouriteFood == Food.Orange>>
    It's an error if you see this!
<<else>>
    It's an error if you see this!
<<endif>>

<<if $secondFavouriteFood == Food.Orange>>
    Oranges are okay in a pinch!
<<else>>
    It's an error if you see this!
<<endif>>

// Enum variables can be modified, just like all other variables
<<set $favouriteFood to Food.Orange>>

// (Just checking that we're not just evaluating all comparisons as true
// lol)
<<if $favouriteFood == Food.Apple>>
    It's an error if you see this!
<<elseif $favouriteFood != Food.Orange>>
    It's an error if you see this!
<<else>>
    I like oranges now!
<<endif>>

// You can skip the enum name if Yarn can infer the enum that it came from
<<set $favouriteFood to .Pear>>

// Yarn can infer the type of an implicitly declared variable, too:
<<set $aDifferentFood = .Apple>>

// Declare two new enums that have explicit raw values: one of numbers, and
// one of strings

<<enum Planets>>
    <<case Mercury = 1>>
    <<case Venus = 2>>
    <<case Earth = 3>>
    <<case Mars = 4>>
    <<case Jupiter = 5>>
    <<case Saturn = 6>>
    <<case Uranus = 7>>
    <<case Neptune = 8>>
<<endenum>>

<<enum QuestObjectives>>
    <<case Objective1 = "DoObjective1">>
    <<case Objective2 = "DoObjective2">>
    <<case Objective3 = "DoObjective3">>
<<endenum>>

<<if string(QuestObjectives.Objective1) == "DoObjective1">>
    ok 1
<<else>>
    error
<<endif>>

<<if number(Planets.Earth) == 3>>
    ok 2
<<else>>
    error
<<endif>>

===
